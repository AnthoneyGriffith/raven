<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/Optimizers/BO.Levi</name>
    <author>AnthoneyGriffith</author>
    <created>2023-07-13</created>
    <classesTested>BayesianOptimizer</classesTested>
    <description>
      This tests provides regression testing for the Bayesian Optimizer within RAVEN. The primary
      configurations tested here are the Lower Confidence Bound acquisition function with the
      slsqp solver option.
    </description>
    <analytic>
      This test uses the Levi test function from analytic models.
    </analytic>
  </TestInfo>

  <RunInfo>
    <WorkingDir>./</WorkingDir>
    <Sequence>optimize, print</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Steps>
    <MultiRun name="optimize" >
      <Input class="DataObjects" type="PointSet">placeholder</Input>
      <Model class="Models" type="ExternalModel">levi</Model>
      <Optimizer class="Optimizers" type="BayesianOptimizer">BOopt</Optimizer>
      <SolutionExport class="DataObjects" type="PointSet">opt_export</SolutionExport>
      <Output class="DataObjects" type="PointSet">optOut</Output>
      <Output class="OutStreams" type="Print">opt_export</Output>
    </MultiRun>
    <IOStep name="print">
      <Input class="DataObjects" type="PointSet">opt_export</Input>
      <Input class="DataObjects" type="PointSet">optOut</Input>
      <Output class="OutStreams" type="Print">opt_export</Output>
      <Output class="OutStreams" type="Print">optOut</Output>
    </IOStep>
  </Steps>

  <Distributions>
    <Uniform name='levi_dist'>
      <lowerBound>-10</lowerBound>
      <upperBound>10</upperBound>
    </Uniform>
  </Distributions>

  <Optimizers>
    <BayesianOptimizer name="BOopt">
      <objective>ans</objective>
      <variable name="x">
        <distribution>levi_dist</distribution>
      </variable>
      <variable name="y">
        <distribution>levi_dist</distribution>
      </variable>
      <TargetEvaluation class="DataObjects" type="PointSet">optOut</TargetEvaluation>
      <samplerInit>
        <limit>90</limit>
        <initialSeed>42</initialSeed>
      </samplerInit>
      <Sampler    class="Samplers"  type="Stratified" >LHS_samp</Sampler>
      <Model  class="Models"  type="ROM" subType="GaussianProcessRegressor">gpROM</Model>
      <ModelSelection>
        <Duration>10</Duration>
        <Method>Internal</Method>
      </ModelSelection>
      <convergence>
        <acquisition>1e-6</acquisition>
        <persistence>5</persistence>
      </convergence>
      <Acquisition>
        <LowerConfidenceBound>
          <optimizationMethod>slsqp</optimizationMethod>
          <seedingCount>1</seedingCount>
          <pi>0.98</pi>
          <transient>Constant</transient>
        </LowerConfidenceBound>
      </Acquisition>
    </BayesianOptimizer>
  </Optimizers>

  <Samplers>
    <Stratified name="LHS_samp">
      <samplerInit>
        <initialSeed>42</initialSeed>
      </samplerInit>
      <variable name="x">
        <distribution>levi_dist</distribution>
        <grid construction="equal" steps="5" type="CDF">0 1</grid>
      </variable>
      <variable name="y">
        <distribution>levi_dist</distribution>
        <grid construction="equal" steps="5" type="CDF">0 1</grid>
      </variable>
    </Stratified>
  </Samplers>

  <Models>
    <ExternalModel ModuleToLoad="../../../AnalyticModels/optimizing/levi.py" name="levi" subType="">
      <variables>x,y,ans</variables>
    </ExternalModel>
    <ROM name="gpROM" subType="GaussianProcessRegressor">
      <Features>x,y</Features>
      <Target>ans</Target>
      <alpha>1e-8</alpha>
      <n_restarts_optimizer>5</n_restarts_optimizer>
      <normalize_y>True</normalize_y>
      <random_state>42</random_state>
      <kernel>Custom</kernel>
      <custom_kernel>(Constant*Matern)+(Constant*RBF)</custom_kernel>
      <anisotropic>True</anisotropic>
      <multioutput>False</multioutput>
    </ROM>
  </Models>

    <DataObjects>
      <PointSet name="placeholder"/>
      <PointSet name="optOut">
        <Input>x,y</Input>
        <Output>ans</Output>
      </PointSet>
      <PointSet name="opt_export">
        <Input>trajID</Input>
        <Output>x,y,ans</Output>
      </PointSet>
    </DataObjects>

    <OutStreams>
      <Print name="optOut">
        <type>csv</type>
        <source>optOut</source>
      </Print>
      <Print name="opt_export">
        <type>csv</type>
        <source>opt_export</source>
        <clusterLabel>trajID</clusterLabel>
      </Print>
    </OutStreams>
</Simulation>
